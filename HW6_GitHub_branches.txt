1. На локальном репозитории сделать ветки для:
Postman
Jmeter
CheckLists
Bug Reports
SQL
Charles
Mobile testing

git branch postman
git branch jmeter
git branch checklists
git branch bug_reports
git branch sql
git branch charles
git branch mobile_testing

git branch
  
  bug_reports
  charles
  checklist
  jmeter
* main
  mobile_testing
  postman
  sql


2. Запушить все ветки на внешний репозиторий

git push -u origin Postman
git push -u origin Jmeter
git push -u origin Checklists
git push -u origin Bag_Reports
git push -u origin SQL
git push -u origin Charles
git push -u origin Mobile_Testing

3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта
git checkout Bug_Reports

vim   bugreport.txt

1. Summary
2. Project, component, version
3. Steps to reproduce
4. Actual result
5. Expected result
6. Other relevant information


4. Запушить структуру багрепорта на внешний репозиторий
git add 	bugreport.txt

git commit -m   "created file with bug report structure"

git push

5. Вмержить ветку Bag Reports в Main
git checkout main

git merge bug_reports

6. Запушить main на внешний репозиторий.
git push

7. В ветке checkLists набросать структуру чек листа.
git checkout Checklists

vim checklist.txt

1 build		/версия сборки
2 environment	/окружение
3 test date	/дата проведения теста
4 tester		/тестировщик
5 test type	/тип/вид/уровень тестирования
6 checking	/название проверки
7 result		/результат

8. Запушить структуру на внешний репозиторий
git add checklist.txt

git commit -m "add new file checklist.txt"
git push

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
Зайти на сайт github

Выбрать репозиторий Group29
Нажать  Compare & pull request
Нажать  Create pull request
Нажать  Merge pull request
Нажать  Confirm merge
В результате успешного слияния отобразится: Pull request successfull merged and closed

10. Синхронизировать Внешнюю и Локальную ветки Main

git checkout main
git pull
